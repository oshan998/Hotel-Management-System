/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package java_hotelmanagement;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.Date;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author DJ LEN Lasitha
 */
public class ReservationForm extends javax.swing.JFrame {
Connection con;
    /**
     * Creates new form ReservationForm
     */
    RESERVATION reservation =new RESERVATION();
    
    public ReservationForm() {
        initComponents();
        
        reservation.fillReservation(jTable1);
        reservation.fillcombobox(jComboBox1);
        jTable1.setRowHeight(25);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldReservationID = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldClientID = new javax.swing.JTextField();
        jTextFieldRoomNumber = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonAddReservation = new javax.swing.JButton();
        jButtonEditReservation = new javax.swing.JButton();
        jButtonDeleteReservation = new javax.swing.JButton();
        jButtonClear = new javax.swing.JButton();
        jButtonRefresh = new javax.swing.JButton();
        jDateChooserCheckIn = new com.toedter.calendar.JDateChooser();
        jDateChooserCheckOut = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTextnights = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextanswer = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Reservation Information");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Sonrivilla Resort");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(206, 206, 206)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("Reservation ID:");

        jTextFieldReservationID.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("Client ID:");

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("Room Number:");

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("Check In:");

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setText("Check Out:");

        jTextFieldClientID.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jTextFieldRoomNumber.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ReservationID", "Client ID", "Room Number", "Check In", "Check Out", "Room Price", "Nightstay", "Charge"
            }
        )
        //to make uneditable table
        {public boolean isCellEditable(int row,int column){return false;}}
    );
    jTable1.setSelectionBackground(new java.awt.Color(0, 153, 153));
    jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTable1MouseClicked(evt);
        }
    });
    jScrollPane1.setViewportView(jTable1);

    jButtonAddReservation.setBackground(new java.awt.Color(204, 204, 0));
    jButtonAddReservation.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
    jButtonAddReservation.setText("Add Reservation");
    jButtonAddReservation.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
    jButtonAddReservation.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    jButtonAddReservation.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButtonAddReservationActionPerformed(evt);
        }
    });

    jButtonEditReservation.setBackground(new java.awt.Color(204, 204, 0));
    jButtonEditReservation.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
    jButtonEditReservation.setText("Edit");
    jButtonEditReservation.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
    jButtonEditReservation.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    jButtonEditReservation.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButtonEditReservationActionPerformed(evt);
        }
    });

    jButtonDeleteReservation.setBackground(new java.awt.Color(204, 204, 0));
    jButtonDeleteReservation.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
    jButtonDeleteReservation.setText("Delete");
    jButtonDeleteReservation.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
    jButtonDeleteReservation.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    jButtonDeleteReservation.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButtonDeleteReservationActionPerformed(evt);
        }
    });

    jButtonClear.setBackground(new java.awt.Color(204, 204, 0));
    jButtonClear.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
    jButtonClear.setText("Clear");
    jButtonClear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    jButtonClear.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButtonClearActionPerformed(evt);
        }
    });

    jButtonRefresh.setBackground(new java.awt.Color(204, 204, 0));
    jButtonRefresh.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
    jButtonRefresh.setText("Refresh");
    jButtonRefresh.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButtonRefreshActionPerformed(evt);
        }
    });

    jDateChooserCheckIn.setDateFormatString("dd/MM/yyyy");

    jDateChooserCheckOut.setDateFormatString("dd/MM/yyyy");

    jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
    jLabel8.setText("Room prices:");

    jLabel9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
    jLabel9.setText("Night stay:");

    jComboBox1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

    jTextnights.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

    jButton1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
    jButton1.setText("Room Type");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton1ActionPerformed(evt);
        }
    });

    jButton2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
    jButton2.setText("Calculate charges");
    jButton2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton2ActionPerformed(evt);
        }
    });

    jTextanswer.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

    jButton3.setBackground(new java.awt.Color(204, 204, 0));
    jButton3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
    jButton3.setText("View Report");
    jButton3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton3ActionPerformed(evt);
        }
    });

    jLabel10.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
    jLabel10.setForeground(new java.awt.Color(255, 255, 255));
    jLabel10.setText("SONK Technologies (PVT) Ltd");

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(24, 24, 24)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jButtonAddReservation, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonRefresh))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jButtonEditReservation, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButtonDeleteReservation, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButtonClear, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jButton3)
                    .addGap(0, 0, Short.MAX_VALUE))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4)
                                .addComponent(jLabel5)
                                .addComponent(jLabel6)
                                .addComponent(jLabel7)
                                .addComponent(jLabel8)
                                .addComponent(jLabel9))
                            .addGap(15, 15, 15))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jButton2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldReservationID)
                            .addComponent(jTextFieldClientID)
                            .addComponent(jTextFieldRoomNumber)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jDateChooserCheckOut, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                                    .addComponent(jDateChooserCheckIn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(32, 32, 32)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTextnights, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton1))
                        .addComponent(jTextanswer, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 4, Short.MAX_VALUE)))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10)
                    .addGap(50, 50, 50))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(18, 18, 18)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 705, Short.MAX_VALUE)
                    .addGap(22, 22, 22))))
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(47, 47, 47)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                    .addComponent(jLabel10))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jTextFieldReservationID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jTextFieldClientID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jTextFieldRoomNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jDateChooserCheckIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel7)
                        .addComponent(jDateChooserCheckOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel9)
                        .addComponent(jTextnights, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2)
                        .addComponent(jTextanswer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButtonAddReservation, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButtonRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButtonDeleteReservation, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButtonClear, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jButtonEditReservation, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addContainerGap())))
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(0, 0, Short.MAX_VALUE))
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        
            // TODO add your handling code here:
            DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
            //get the selected row
            int rIndex =jTable1.getSelectedRow();
            //dsplay data
            jTextFieldReservationID.setText(model.getValueAt(rIndex, 0).toString());
            jTextFieldClientID.setText(model.getValueAt(rIndex, 1).toString());
            jTextFieldRoomNumber.setText(model.getValueAt(rIndex, 2).toString());
            
            try{
            Date checkIn= new SimpleDateFormat("yyyy-MM-dd").parse(model.getValueAt(rIndex, 3).toString());
            jDateChooserCheckIn.setDate(checkIn);
        
            Date checkOut= new SimpleDateFormat("yyyy-MM-dd").parse(model.getValueAt(rIndex, 4).toString());
            jDateChooserCheckOut.setDate(checkOut);
            
            } catch (ParseException ex) {
            Logger.getLogger(ReservationForm.class.getName()).log(Level.SEVERE, null, ex);
        }
            
            jComboBox1.setSelectedItem(model.getValueAt(rIndex, 5));
            jTextnights.setText(model.getValueAt(rIndex, 6).toString());
            jTextanswer.setText(model.getValueAt(rIndex, 7).toString());        
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButtonAddReservationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddReservationActionPerformed
        //add new
        
        try{
            int client_id =Integer.valueOf(jTextFieldClientID.getText());
            int room_number=Integer.valueOf(jTextFieldRoomNumber.getText());
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String check_in= dateFormat.format(jDateChooserCheckIn.getDate());
            String check_out= dateFormat.format(jDateChooserCheckOut.getDate());
            String today=dateFormat.format(new Date());
            int roomprice=Integer.valueOf(jComboBox1.getSelectedItem().toString());
            int nightstay=Integer.valueOf(jTextnights.getText());
            String charge=jTextanswer.getText();
            
            Date checkin=dateFormat.parse(check_in);
            Date checkout=dateFormat.parse(check_out);
            Date todate =dateFormat.parse(today);
            //check in is not equal to current date or equal to before date
            if(!(checkin.after(todate)||checkin.equals(todate)))
            {
              JOptionPane.showMessageDialog(rootPane,"always Check In should be today or after today","Date error",JOptionPane.ERROR_MESSAGE);
                  
            }
            //check out day 
            else if(!(checkout.after(checkin)||checkout.equals(checkin))){
            JOptionPane.showMessageDialog(rootPane,"always Check Out should be not equal to check in and past date","Date error",JOptionPane.ERROR_MESSAGE);
        
            }else{
            if(reservation.addreservation(client_id, room_number, check_in,check_out,roomprice,nightstay,charge))
            {
            JOptionPane.showMessageDialog(rootPane,"Reservation added successfully","Add Reservation",JOptionPane.INFORMATION_MESSAGE);
        
            }else{
            JOptionPane.showMessageDialog(rootPane,"Reservation not added ","Add error",JOptionPane.ERROR_MESSAGE);
        
            }

            }
           
        }catch(NumberFormatException ex)
            {
            JOptionPane.showMessageDialog(rootPane,ex.getMessage() + "please enter the Room Number","Found error",JOptionPane.ERROR_MESSAGE);
        
            } catch (ParseException ex) {
            Logger.getLogger(ReservationForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButtonAddReservationActionPerformed

    private void jButtonEditReservationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditReservationActionPerformed
        // edit the selected row
    
            try{
            int reservationid=Integer.valueOf(jTextFieldReservationID.getText());
            int rnumber= Integer.valueOf(jTextFieldRoomNumber.getText());
            int clientid=Integer.valueOf(jTextFieldClientID.getText());
            
            
            int roomprice=Integer.valueOf(jComboBox1.getSelectedItem().toString());
            int nightstay=Integer.valueOf(jTextnights.getText());
            String charge=jTextanswer.getText();
            
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String check_in= dateFormat.format(jDateChooserCheckIn.getDate());
            String check_out= dateFormat.format(jDateChooserCheckOut.getDate());
            
             String today=dateFormat.format(new Date());
            
            Date checkin=dateFormat.parse(check_in);
            Date checkout=dateFormat.parse(check_out);
            Date todate =dateFormat.parse(today);
          
            
              if(!(checkin.after(todate)||checkin.equals(todate)))
            {
              JOptionPane.showMessageDialog(rootPane,"always Check In should be today or after today","Date error",JOptionPane.ERROR_MESSAGE);
                  
            }
            //check out day 
            else if(!(checkout.after(checkin)||checkout.equals(checkin))){
            JOptionPane.showMessageDialog(rootPane,"always Check Out should be not equal to check in and past date","Date error",JOptionPane.ERROR_MESSAGE);
        
            }else{
            if(reservation.editreservation(reservationid,clientid,rnumber,check_in,check_out,roomprice,nightstay,charge))
            {
            JOptionPane.showMessageDialog(rootPane,"reservation data updated successfully","updated reservation",JOptionPane.INFORMATION_MESSAGE);
        
            }else{
            JOptionPane.showMessageDialog(rootPane,"reservation not updated","update error",JOptionPane.ERROR_MESSAGE);
        
            }

            }
                
            }
            catch(NumberFormatException ex)
            {
            JOptionPane.showMessageDialog(rootPane,ex.getMessage() + "please enter the Room Number + Client ID + Reservation ID","reservation error",JOptionPane.ERROR_MESSAGE);
        
            }
            
            catch(NullPointerException ex)
            {
            JOptionPane.showMessageDialog(rootPane,ex.getMessage() + "Please select the Check In Dates & Check Out Dates ","Date error",JOptionPane.ERROR_MESSAGE);
        
            }
            catch (ParseException ex) {
            Logger.getLogger(ReservationForm.class.getName()).log(Level.SEVERE, null, ex);
        }
           
    }//GEN-LAST:event_jButtonEditReservationActionPerformed

    private void jButtonDeleteReservationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteReservationActionPerformed
        // TODO add your handling code here:
    try{
            int reservationId= Integer.valueOf(jTextFieldReservationID.getText());
            
            if(reservation.removereservation(reservationId))
        {
        JOptionPane.showMessageDialog(rootPane,"reservation data deleted successfully","delete reservation",JOptionPane.INFORMATION_MESSAGE);
        }else{
        JOptionPane.showMessageDialog(rootPane,"reservation not deleted","delete error",JOptionPane.ERROR_MESSAGE);
        }
            
            }
            catch(NumberFormatException ex)
            {
            JOptionPane.showMessageDialog(rootPane,ex.getMessage() + "please enter the reservation ID","reservation ID error",JOptionPane.ERROR_MESSAGE);
        
            }
      

    }//GEN-LAST:event_jButtonDeleteReservationActionPerformed

    private void jButtonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearActionPerformed
        // clear data
        
        jTextFieldClientID.setText("");
        jTextFieldReservationID.setText("");
        jTextFieldRoomNumber.setText("");
        jDateChooserCheckIn.setDate(null);
        jDateChooserCheckOut.setDate(null);
        jComboBox1.setSelectedIndex(0);
                jTextnights.setText("");
                jTextanswer.setText("");
    }//GEN-LAST:event_jButtonClearActionPerformed

    private void jButtonRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRefreshActionPerformed
        // TODO add your handling code here:
       jTable1.setModel(new DefaultTableModel(null,new Object[]{"ReservationID", "Client ID", "Room Number", "Check In", "Check Out", "Room Price", "Nightstay", "Charge"}));

        reservation.fillReservation(jTable1);
    }//GEN-LAST:event_jButtonRefreshActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Room_type roomtype=new Room_type();
        roomtype.setVisible(true);
        roomtype.pack();
        roomtype.setLocationRelativeTo(null);
        roomtype.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int roomprice =Integer.parseInt(jComboBox1.getSelectedItem().toString());
        int nightstay =Integer.parseInt(jTextnights.getText());
        int ans=roomprice*nightstay;
        jTextanswer.setText("Rs."+ans+".00");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            Class.forName("com.mysql.jdbc.Driver");
            con=DriverManager.getConnection("jdbc:mysql://localhost/hoteldb","root","");
            JasperDesign jdesign= JRXmlLoader.load("C:\\Users\\DJ LEN Lasitha\\Documents\\NetBeansProjects\\Java_hotelmanagement\\src\\java_hotelmanagement\\reservation.jrxml");
            String query="SELECT `client_id`, `room_number`, `check_in`, `check_out`, `room_price`, `nightstay`, `charge` FROM `reservation` WHERE `nightstay`>1 AND `room_price`>10000";
            JRDesignQuery updateQuery = new JRDesignQuery(); 
            updateQuery.setText(query);
            jdesign.setQuery(updateQuery);
            JasperReport jreport = JasperCompileManager.compileReport(jdesign);
            JasperPrint jprint = JasperFillManager.fillReport(jreport, null,con);
            JasperViewer.viewReport(jprint,false);
            
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(OtherServiceForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(OtherServiceForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (JRException ex) {
            Logger.getLogger(OtherServiceForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReservationForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReservationForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReservationForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReservationForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReservationForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButtonAddReservation;
    private javax.swing.JButton jButtonClear;
    private javax.swing.JButton jButtonDeleteReservation;
    private javax.swing.JButton jButtonEditReservation;
    private javax.swing.JButton jButtonRefresh;
    private javax.swing.JComboBox<String> jComboBox1;
    private com.toedter.calendar.JDateChooser jDateChooserCheckIn;
    private com.toedter.calendar.JDateChooser jDateChooserCheckOut;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldClientID;
    private javax.swing.JTextField jTextFieldReservationID;
    private javax.swing.JTextField jTextFieldRoomNumber;
    private javax.swing.JTextField jTextanswer;
    private javax.swing.JTextField jTextnights;
    // End of variables declaration//GEN-END:variables
}
